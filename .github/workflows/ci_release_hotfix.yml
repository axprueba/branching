name: CI Hotfix & Release

on:
  pull_request:
    branches:
      - "release/*"
      - "hotfix/*"
    types: [opened, synchronize]

jobs:
  build-and-retag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Extraer versión y tipo de rama
        id: extract_version
        run: |
          BRANCH_REF="${{ github.ref_name }}"
          echo "Branch ref: $BRANCH_REF"

          if [[ "$BRANCH_REF" =~ ^release/ ]]; then
            VERSION="${BRANCH_REF#release/}"
            TAG_SUFFIX="-rc"

          elif [[ "$BRANCH_REF" =~ ^hotfix/ ]]; then
            VERSION="${BRANCH_REF#hotfix/}"
            TAG_SUFFIX="-hotfix"

          else
            echo "No es una rama release/* ni hotfix/* => Saliendo."
            exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_SUFFIX=$TAG_SUFFIX" >> $GITHUB_ENV
          echo "Se extrae versión: $VERSION con sufijo $TAG_SUFFIX"

      - name: Configurar variables de entorno
        run: |
          echo "DOCKER_REGISTRY=your-registry.io" >> $GITHUB_ENV
          echo "IMAGE_NAME=my-app" >> $GITHUB_ENV
          echo "FINAL_TAG=${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}" >> $GITHUB_ENV
          echo "TEMP_TAG=${{ env.FINAL_TAG }}${{ env.TAG_SUFFIX }}" >> $GITHUB_ENV

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin ${{ env.DOCKER_REGISTRY }}

      - name: Build & Push Docker Image
        run: |
          echo "Construyendo y pusheando imagen con tag temporal: $TEMP_TAG"
          docker build . -t $TEMP_TAG
          docker push $TEMP_TAG